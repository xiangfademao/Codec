/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include <pvamrnbdecoder_api.h>
#include "dec_if.h"
/* Header for class io_kvh_media_amr_AmrWBDecoder */
namespace amr_decode {
#ifndef _Included_io_kvh_media_amr_AmrWBDecoder
#define _Included_io_kvh_media_amr_AmrWBDecoder
#ifdef __cplusplus
    extern "C" {
#endif
/*
 * Class:     io_kvh_media_amr_AmrWBDecoder
 * Method:    init
 * Signature: ()J
 */
    JNIEXPORT jlong JNICALL Java_io_kvh_media_amr_AmrWBDecoder_init(JNIEnv *, jclass) {
        return (jlong) D_IF_init();
    }

/*
 * Class:     io_kvh_media_amr_AmrWBDecoder
 * Method:    exit
 * Signature: (J)V
 */
    JNIEXPORT void JNICALL Java_io_kvh_media_amr_AmrWBDecoder_exit
            (JNIEnv *, jclass type, jlong state) {
        D_IF_exit((void *) state);
    }

/*
 * Class:     io_kvh_media_amr_AmrWBDecoder
 * Method:    decode
 * Signature: (J[B[S)V
 */
    JNIEXPORT void JNICALL Java_io_kvh_media_amr_AmrWBDecoder_decode
            (JNIEnv *env, jclass, jlong state, jbyteArray in, jshortArray out) {
        jsize inLen = env->GetArrayLength(in);
        jbyte inBuf[inLen];
        env->GetByteArrayRegion(in, 0, inLen, inBuf);
        jsize outLen = env->GetArrayLength(out);
        short outBuf[outLen];
        D_IF_decode((void *) state, (const unsigned char *) inBuf, (short *) outBuf, MIME_IETF);
        env->SetShortArrayRegion(out, 0, outLen, outBuf);
    }

#ifdef __cplusplus
    }
#endif
#endif
}
